{
	// Place your supersonic-subatomic-camel workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"vertx-to-stdout": {
		"scope": "java",
		"prefix": "vxstdout",
		"body": [
			"from(\"vertx:toots.stream\")",
			"    .to(\"stream:out\");"
		]
	},
	"From http SSE stream foojay": {
		"scope": "java",
		"prefix": "foojay",
		"body": [
			"from(\"stream:http?httpUrl=https://foojay.social/api/v1/streaming/public\")"
		]
	},
	"Split SSE on newlines": {
		"scope": "java",
		"prefix": "split",
		"body": [
			".split(body().tokenize(\"\\n\"))"
		]
	},
	"Filter for data": {
		"scope": "java",
		"prefix": "filter",
		"body": ".filter(body().startsWith(\"data: \"))"
	},
	"Removed data prefix": {
		"scope": "java",
		"prefix": "replace",
		"body": ".setBody(simple(\"${body.replaceAll(\\\"^data: \\\", \\\"\\\")}\"))"
	},
	"Filter by language": {
		"scope": "java",
		"prefix": "language",
		"body": ".filter(jsonpath(\"$[?(@.language == \\\"${1:de}\\\")]\"))"
	},
	"Parse JSON": {
		"scope": "java",
		"prefix": "parse",
		"body": ".unmarshal().json(JsonLibrary.Gson)"
	},
	"Extract relevant data": {
		"scope": "java",
		"prefix": "content",
		"body": [
			".setBody(simple(\"\"\"",
			"{",
			"	\"account\": \"${in.body.get(\"account\").get(\"acct\")}\",",
			"	\"content\": \"${in.body.get(\"content\")}\",",
			"	\"created\": \"${in.body.get(\"created_at\")}\"",
			"}\"\"\"))"
		]
	},
	"Send EventBus message": {
		"scope": "java",
		"prefix": "send",
		"body": ".to(\"vertx:toots.stream\");"
	}
}